
#Использовать fs

#Область ОписаниеПеременных

Перем Лог;                      // Объект записи лога приложения
Перем КаталогШаблонов;          // Строка - каталог с шаблонами pipeline
Перем КаталогСборки;            // Строка - каталог сборки

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	Лог = ПараметрыПриложения.Лог();

	Лог.Информация("Генерация сборочной линии...");

	Pipeline = ТекстЭтапа(КаталогШаблонов, "stages.yml");

	Pipeline = Pipeline + ТекстЭтапа(КаталогШаблонов, "common.yml");
	Pipeline = Pipeline + ТекстЭтапа(КаталогШаблонов, "schedules.yml");

	// TODO 
	// Шаги для установки OneScript и связанных пакетов из хаба
	// Pipeline = Pipeline + ТекстЭтапа(КаталогШаблонов, "pre.yml");

	Pipeline = Pipeline + ТекстЭтапа(КаталогШаблонов, "build.yml");
	Pipeline = Pipeline + ТекстЭтапа(КаталогШаблонов, "syntax-check.yml");

	Pipeline = Pipeline + ТекстЭтапа(КаталогШаблонов, "tests.yml");

	Pipeline = Pipeline + ТекстЭтапа(КаталогШаблонов, "sonar.yml");
	Pipeline = Pipeline + ТекстЭтапа(КаталогШаблонов, "coverage.yml");
	Pipeline = Pipeline + ТекстЭтапа(КаталогШаблонов, "allure.yml");

	Pipeline = Pipeline + ТекстЭтапа(КаталогШаблонов, "pages.yml");

	ФС.ОбеспечитьКаталог(КаталогСборки);

	ВыходнойФайл = ОбъединитьПути(КаталогСборки, "generate-config.yml");
	Общие.СохранитьТекст(Pipeline, ВыходнойФайл);

	ТекстСообщения = СтрШаблон("Сборочная линия сохранена в %1", ВыходнойФайл);
	Лог.Информация(ТекстСообщения);

	Лог.Информация("Генерация сборочной линии завершена");

КонецПроцедуры // ВыполнитьКоманду

#КонецОбласти

Функция ТекстЭтапа(Каталог, ИмяФайла)

	ПутьКФайлу = ОбъединитьПути(Каталог, ИмяФайла);

	ЧтениеТекста = Новый ЧтениеТекста(ПутьКФайлу, КодировкаТекста.UTF8);
	ТекстФайла = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();

	Возврат ТекстФайла;

КонецФункции

КаталогШаблонов = ПараметрыПриложения.КаталогШаблоновCI();
КаталогСборки = ПараметрыПриложения.КаталогСборки();
